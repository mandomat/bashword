#!/bin/bash

#VARIABLES
home=$HOME
db="$home/.bashword/bashword_db"
key="$home/.bashword/bashword_key"

function local_help {
  echo "usage: bashword [new get] -s facebook "
  echo "-s: service you're generating a password for (mandatory & unique)"
  echo "-p: user provided password (optional)"
  return
}

function gen_pass {
  echo | cat  /dev/urandom | head -1 | base64 | tr -d '\n'| cut -c1-8
}

function new_password {
  service=$1

  read -p "DB password: " db_password
  openssl enc -aes-256-cbc -d -in "$db.enc" -out "$db" -pass pass:"$db_password"

  exists=$(check_exists "$service")
  if [ -z "$exists" ];
    then
      service_password=$(gen_pass)
      echo "$service:$service_password" >> "$db"
      openssl enc -aes-256-cbc -salt -in "$db" -out "$db.enc" -pass pass:"$db_password"
      echo "New password generated for $service: $service_password"
    else
      echo "Service with this name already exists. Did you mean 'bashword update'?"
  fi
  rm "$db"

}

function get_password {
  service=$1
  read -p "DB password: " db_password
  openssl enc -aes-256-cbc -d -in "$db.enc" -out "$db" -pass pass:"$db_password"
  exists=$(check_exists "$service")

  if [ -z "$exists"]
    then
      echo "Service not found"
    else
      echo "$exists"
  fi
}

function check_exists {
  found=$(awk -v name="$service" -F ':' '$1 == name { print $2 }' < "$db")

  if [ -z "$found" ];
    then
      echo ""
    else
      echo "$found"
  fi
}

[[ -z ${1} ]] && local_help

action="$1"; shift

while getopts s:p: option;
do
  case $option in
    s) service=$OPTARG;;
    p) password=$OPTARG;;
    *) local_help;;
  esac
done

if [ -z "$service" ]
  then
    echo "* No service argument supplied"
    local_help
fi

case "$action" in
    new) new_password "$service" ;;
    get) get_password "$service";;
    *) local_help;;
esac
